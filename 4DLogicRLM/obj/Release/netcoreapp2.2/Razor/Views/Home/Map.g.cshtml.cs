#pragma checksum "C:\Users\U257\source\repos\4DLogicRLM\4DLogicRLM\Views\Home\Map.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "7c2f0bc33d5005a14b44d293a05fe110c0c2c5e0"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Home_Map), @"mvc.1.0.view", @"/Views/Home/Map.cshtml")]
[assembly:global::Microsoft.AspNetCore.Mvc.Razor.Compilation.RazorViewAttribute(@"/Views/Home/Map.cshtml", typeof(AspNetCore.Views_Home_Map))]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#line 1 "C:\Users\U257\source\repos\4DLogicRLM\4DLogicRLM\Views\_ViewImports.cshtml"
using _4DLogicRLM;

#line default
#line hidden
#line 2 "C:\Users\U257\source\repos\4DLogicRLM\4DLogicRLM\Views\_ViewImports.cshtml"
using _4DLogicRLM.Models;

#line default
#line hidden
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"7c2f0bc33d5005a14b44d293a05fe110c0c2c5e0", @"/Views/Home/Map.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"47c1690e17d491f00cf0cee6a44eefc6f2fae30e", @"/Views/_ViewImports.cshtml")]
    public class Views_Home_Map : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    {
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_0 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("href", new global::Microsoft.AspNetCore.Html.HtmlString("~/css/map.css"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_1 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("rel", new global::Microsoft.AspNetCore.Html.HtmlString("stylesheet"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_2 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/vendor/jquery.min.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_3 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/js/MapScripts.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        #line hidden
        #pragma warning disable 0169
        private string __tagHelperStringValueBuffer;
        #pragma warning restore 0169
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperExecutionContext __tagHelperExecutionContext;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner __tagHelperRunner = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner();
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __backed__tagHelperScopeManager = null;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __tagHelperScopeManager
        {
            get
            {
                if (__backed__tagHelperScopeManager == null)
                {
                    __backed__tagHelperScopeManager = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager(StartTagHelperWritingScope, EndTagHelperWritingScope);
                }
                return __backed__tagHelperScopeManager;
            }
        }
        private global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper;
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
            BeginContext(0, 2, true);
            WriteLiteral("\r\n");
            EndContext();
#line 2 "C:\Users\U257\source\repos\4DLogicRLM\4DLogicRLM\Views\Home\Map.cshtml"
  
    ViewData["Title"] = "Map";
    Layout = Layout = "~/Views/Shared/_mapLayout.cshtml";

#line default
#line hidden
            BeginContext(100, 188, true);
            WriteLiteral("\r\n\r\n<script src=\'https://api.tiles.mapbox.com/mapbox-gl-js/v1.5.0/mapbox-gl.js\'></script>\r\n<link href=\'https://api.tiles.mapbox.com/mapbox-gl-js/v1.5.0/mapbox-gl.css\' rel=\'stylesheet\' />\r\n");
            EndContext();
            BeginContext(288, 46, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("link", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.SelfClosing, "7c2f0bc33d5005a14b44d293a05fe110c0c2c5e05092", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_0);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_1);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(334, 457, true);
            WriteLiteral(@"
<script src='https://api.mapbox.com/mapbox-gl-js/plugins/mapbox-gl-directions/v4.0.2/mapbox-gl-directions.js'></script>
<link rel='stylesheet' href='https://api.mapbox.com/mapbox-gl-js/plugins/mapbox-gl-directions/v4.0.2/mapbox-gl-directions.css' type='text/css' />
<link rel=""stylesheet"" href=""https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css"">
<div class=""mapcontent"">
    <div class=""mapcontenthead""></div>
    
");
            EndContext();
            BeginContext(832, 642, true);
            WriteLiteral(@"    <div class=""sidebar"" id=""LocationListings"">
        <div class=""heading"" style=""padding-left:10px;"">
            <div class=""container push""></div>

            <h2 style=""font-size:20px;"">Resource Locations</h2>
        </div>
        <div class=""listings"" id=""listings""></div>
    </div>


    <div class=""mapC"" id='map'>
        <div class=""container push""></div>
        <div class=""listingIcon"">
            <a href=""javascript:void(0);"" id=""ListingIcon"" class=""icon"" onclick=""""><i class=""fa fa-bars""></i> Locations</a>
            <div class=""listings2"" id=""listings""></div>
        </div>
    </div>
</div>



");
            EndContext();
            BeginContext(1474, 46, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "7c2f0bc33d5005a14b44d293a05fe110c0c2c5e07589", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_2);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(1520, 4, true);
            WriteLiteral("\r\n\r\n");
            EndContext();
            BeginContext(1524, 42, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "7c2f0bc33d5005a14b44d293a05fe110c0c2c5e08772", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_3);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(1566, 6441, true);
            WriteLiteral(@"
<script type=""text/javascript"">
    if (!('remove' in Element.prototype)) {
        Element.prototype.remove = function () {
            if (this.parentNode) {
                this.parentNode.removeChild(this);
            }
        }
    }
    
    $(document).ready(function () {
        if (navigator.geolocation) {
            navigator.geolocation.getCurrentPosition(successFunction, errorFunction);
        }
        else {
            alert('It seems like Geolocation, which is required for this page, is not enabled in your browser.');
        }
    });
    var latitude = """";
    var longitude = """";
    function successFunction(position) {
        var lat = position.coords.latitude;
        var long = position.coords.longitude;
        latitude = lat;
        longitude = long;
        alert('Your latitude is :' + lat + ' and longitude is ' + long);
        map.flyTo({
            center: [long, lat]
        });
    }

    function errorFunction(position) {
        alert('Err");
            WriteLiteral(@"or!');
    }
    
    mapboxgl.accessToken = 'pk.eyJ1IjoiNGRsb2dpYyIsImEiOiJjazB5MW84bmYwYnY3M2lxaWt1OHRuY2l3In0.l7Nz3PMDJntYADA0o9CU8w';
    

    var nav = new mapboxgl.NavigationControl();
    var geolocate = new mapboxgl.GeolocateControl(
        {
            positionOptions: {
                enableHighAccuracy: true
            },
            trackUserLocation: true
        }
    );
    var map = new mapboxgl.Map({
        container: 'map',
        center: [-115.002136, 55.001251],
        style: 'mapbox://styles/4dlogic/ck0yk7q500ghs1cn4nc5s95el',
        zoom: 5
    });
    map.on(""load"", function () {
        map.loadImage(""https://i.imgur.com/MK4NUzI.png"", function (error, image) {
            if (error) throw error;
            map.addImage(""custom-marker"", image);
            /* Style layer: A style layer ties together the source and image and specifies how they are displayed on the map. */

        });
    });
    map.addControl(nav, 'bottom-right', 'options.showcomp");
            WriteLiteral(@"ass');
    // Add geolocate control to the map.
    

    map.addControl(new mapboxgl.GeolocateControl({
        positionOptions: {
            enableHighAccuracy: true,

        },
        trackUserLocation: true,
        showUserLocation: true

    }));
    function successFunction(position) {
        var lat = position.coords.latitude;
        var long = position.coords.longitude;

        map.flyTo({
            center: [long, lat]
        });

        var currentGL = {
            ""type"": ""FeatureCollection"",
            ""features"": [{
                ""type"": ""Feature"",
                ""geometry"": {
                    ""type"": ""Point"",
                    ""coordinates"": [long, lat]
                },
                ""properties"": {
                    ""title"": ""Mapbox"",
                    ""description"": ""You""
                }
            }]
        };
        var el = document.createElement('div');
        el.className = 'marker2';
        new mapboxgl.Marker(el)
 ");
            WriteLiteral(@"           .setLngLat({ lng: long, lat: lat })
            .setPopup(new mapboxgl.Popup({ closeOnClick: false, offset: 25 }) // add popups
                .setHTML('<h3>' + ""You"" + '</h3><p>' + ""Your location"" + '</p>'))
            .addTo(map);

    }

    // add markers to map
    $.getJSON(""/Home/GetLocations"", function (data) {
        data.features.forEach(function (marker, i) {
            var el = document.createElement('div');
            el.id = ""marker-"" + i;
            el.className = 'marker';
            new mapboxgl.Marker(el)
                .setLngLat(marker.geometry.coordinates)
                .setPopup(new mapboxgl.Popup({ closeOnClick: false, offset: 25 })
                    .setHTML('<h3>' + marker.properties.title + '</h3><p>' + marker.properties.description + '</p>'))
                .addTo(map);
            el.addEventListener('click', function (e) {
                flyToStore(marker);
                createPopUp(marker);
                var activeItem = document.");
            WriteLiteral(@"getElementByClassName('active');
                e.stopPropagation();
                if (activeItem[0]) {
                    activeItem[0].classList.remove('active');
                }
                var listing = document.getElementById('listing-' + i);
                listing.classList.add('active');
            });
        });
        for (i = 0; i < data.features.length; i++) {
            var currentFeature = data.features[i];
            var prop = currentFeature.properties;
            var listings = document.getElementById('listings');
            var listing = listings.appendChild(document.createElement('div'));
            listing.className = 'item';
            listing.id = 'listing-' + i;

            var link = listing.appendChild(document.createElement('a'));
            link.href = ""#"";
            link.className = 'title';
            link.dataPosition = i;
            link.innerHTML = prop.title;

            var details = listing.appendChild(document.createElement('");
            WriteLiteral(@"div'));
            details.innerHTML = prop.description;

            link.addEventListener('click', function (e) {
                var clickedListing = data.features[this.dataPosition];
                flyToStore(clickedListing);
                createPopUp(clickedListing);
                var activeItem = document.getElementsByClassName('active');
                if (activeItem[0]) {
                    activeItem[0].classList.remove('active');
                }
                this.parentNode.classList.add('active');
            });
        }
    });
    function flyToStore(currentFeature) {
        map.flyTo({
            center: currentFeature.geometry.coordinates,
            zoom: 12
        });
    }
    function createPopUp(currentFeature) {
        var popUps = document.getElementsByClassName('mapboxgl-popup');
        if (popUps[0]) popUps[0].remove();
        var popup = new mapboxgl.Popup({ closeOnClick: false })
            .setLngLat(currentFeature.geometry.coordinates");
            WriteLiteral(@")
            .setHTML('<h3>' + currentFeature.properties.title + '</h3><h4>' + currentFeature.properties.description + '<h4>')
            .addTo(map);
    }
    
    map.addControl(new MapboxDirections({
        accessToken: mapboxgl.accessToken
    }), 'bottom-left');
    
</script>
");
            EndContext();
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; }
    }
}
#pragma warning restore 1591
