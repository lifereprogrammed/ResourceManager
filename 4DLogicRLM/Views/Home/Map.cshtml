
@{
    ViewData["Title"] = "Map";
    Layout = Layout = "~/Views/Shared/_mapLayout.cshtml";
}


<script src='https://api.tiles.mapbox.com/mapbox-gl-js/v1.5.0/mapbox-gl.js'></script>
<link href='https://api.tiles.mapbox.com/mapbox-gl-js/v1.5.0/mapbox-gl.css' rel='stylesheet' />
<link href="~/css/map.css" rel="stylesheet" />
<script src='https://api.mapbox.com/mapbox-gl-js/plugins/mapbox-gl-directions/v4.0.2/mapbox-gl-directions.js'></script>
<link rel='stylesheet' href='https://api.mapbox.com/mapbox-gl-js/plugins/mapbox-gl-directions/v4.0.2/mapbox-gl-directions.css' type='text/css' />
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css">
<div class="mapcontent">
    <div class="mapcontenthead"></div>
    
    @* <div class topnav id myTopnav *@
    <div class="sidebar" id="LocationListings">
        <div class="heading" style="padding-left:10px;">
            <div class="container push"></div>

            <h2 style="font-size:20px;">Resource Locations</h2>
        </div>
        <div class="listings" id="listings"></div>
    </div>


    <div class="mapC" id='map'>
        <div class="container push"></div>
        <div class="listingIcon">
            <a href="javascript:void(0);" id="ListingIcon" class="icon" onclick=""><i class="fa fa-bars"></i> Locations</a>
            <div class="listings2" id="listings"></div>
        </div>
    </div>
</div>



<script src="~/vendor/jquery.min.js"></script>

<script src="~/js/MapScripts.js"></script>
<script type="text/javascript">
    if (!('remove' in Element.prototype)) {
        Element.prototype.remove = function () {
            if (this.parentNode) {
                this.parentNode.removeChild(this);
            }
        }
    }
    
    $(document).ready(function () {
        if (navigator.geolocation) {
            navigator.geolocation.getCurrentPosition(successFunction, errorFunction);
        }
        else {
            alert('It seems like Geolocation, which is required for this page, is not enabled in your browser.');
        }
    });
    var latitude = "";
    var longitude = "";
    function successFunction(position) {
        var lat = position.coords.latitude;
        var long = position.coords.longitude;
        latitude = lat;
        longitude = long;
        alert('Your latitude is :' + lat + ' and longitude is ' + long);
        map.flyTo({
            center: [long, lat]
        });
    }

    function errorFunction(position) {
        alert('Error!');
    }
    
    mapboxgl.accessToken = 'pk.eyJ1IjoiNGRsb2dpYyIsImEiOiJjazB5MW84bmYwYnY3M2lxaWt1OHRuY2l3In0.l7Nz3PMDJntYADA0o9CU8w';
    

    var nav = new mapboxgl.NavigationControl();
    var geolocate = new mapboxgl.GeolocateControl(
        {
            positionOptions: {
                enableHighAccuracy: true
            },
            trackUserLocation: true
        }
    );
    var map = new mapboxgl.Map({
        container: 'map',
        center: [-115.002136, 55.001251],
        style: 'mapbox://styles/4dlogic/ck0yk7q500ghs1cn4nc5s95el',
        zoom: 5
    });
    map.on("load", function () {
        map.loadImage("https://i.imgur.com/MK4NUzI.png", function (error, image) {
            if (error) throw error;
            map.addImage("custom-marker", image);
            /* Style layer: A style layer ties together the source and image and specifies how they are displayed on the map. */

        });
    });
    map.addControl(nav, 'bottom-right', 'options.showcompass');
    // Add geolocate control to the map.
    

    map.addControl(new mapboxgl.GeolocateControl({
        positionOptions: {
            enableHighAccuracy: true,

        },
        trackUserLocation: true,
        showUserLocation: true

    }));
    function successFunction(position) {
        var lat = position.coords.latitude;
        var long = position.coords.longitude;

        map.flyTo({
            center: [long, lat]
        });

        var currentGL = {
            "type": "FeatureCollection",
            "features": [{
                "type": "Feature",
                "geometry": {
                    "type": "Point",
                    "coordinates": [long, lat]
                },
                "properties": {
                    "title": "Mapbox",
                    "description": "You"
                }
            }]
        };
        var el = document.createElement('div');
        el.className = 'marker2';
        new mapboxgl.Marker(el)
            .setLngLat({ lng: long, lat: lat })
            .setPopup(new mapboxgl.Popup({ closeOnClick: false, offset: 25 }) // add popups
                .setHTML('<h3>' + "You" + '</h3><p>' + "Your location" + '</p>'))
            .addTo(map);

    }

    // add markers to map
    $.getJSON("/Home/GetLocations", function (data) {
        data.features.forEach(function (marker, i) {
            var el = document.createElement('div');
            el.id = "marker-" + i;
            el.className = 'marker';
            new mapboxgl.Marker(el)
                .setLngLat(marker.geometry.coordinates)
                .setPopup(new mapboxgl.Popup({ closeOnClick: false, offset: 25 })
                    .setHTML('<h3>' + marker.properties.title + '</h3><p>' + marker.properties.description + '</p>'))
                .addTo(map);
            el.addEventListener('click', function (e) {
                flyToStore(marker);
                createPopUp(marker);
                var activeItem = document.getElementByClassName('active');
                e.stopPropagation();
                if (activeItem[0]) {
                    activeItem[0].classList.remove('active');
                }
                var listing = document.getElementById('listing-' + i);
                listing.classList.add('active');
            });
        });
        for (i = 0; i < data.features.length; i++) {
            var currentFeature = data.features[i];
            var prop = currentFeature.properties;
            var listings = document.getElementById('listings');
            var listing = listings.appendChild(document.createElement('div'));
            listing.className = 'item';
            listing.id = 'listing-' + i;

            var link = listing.appendChild(document.createElement('a'));
            link.href = "#";
            link.className = 'title';
            link.dataPosition = i;
            link.innerHTML = prop.title;

            var details = listing.appendChild(document.createElement('div'));
            details.innerHTML = prop.description;

            link.addEventListener('click', function (e) {
                var clickedListing = data.features[this.dataPosition];
                flyToStore(clickedListing);
                createPopUp(clickedListing);
                var activeItem = document.getElementsByClassName('active');
                if (activeItem[0]) {
                    activeItem[0].classList.remove('active');
                }
                this.parentNode.classList.add('active');
            });
        }
    });
    function flyToStore(currentFeature) {
        map.flyTo({
            center: currentFeature.geometry.coordinates,
            zoom: 12
        });
    }
    function createPopUp(currentFeature) {
        var popUps = document.getElementsByClassName('mapboxgl-popup');
        if (popUps[0]) popUps[0].remove();
        var popup = new mapboxgl.Popup({ closeOnClick: false })
            .setLngLat(currentFeature.geometry.coordinates)
            .setHTML('<h3>' + currentFeature.properties.title + '</h3><h4>' + currentFeature.properties.description + '<h4>')
            .addTo(map);
    }
    
    map.addControl(new MapboxDirections({
        accessToken: mapboxgl.accessToken
    }), 'bottom-left');
    
</script>
